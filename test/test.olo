<% __render__ = require 'markdown' %>
<% debug = require 'debug' %>
<% check = import './test-tools' . check %>

# olojs viewer test

### Boolean operations
- Equality                  <% check((TRUE, 10, 'abc', [1,2,3], {a:1}) == (TRUE, 10, 'abc', [1,2,3], {a:1})) %>
- Non-equality              <% check((TRUE, 10, 'abc', [1,2,3], {a:1}, x->2*x) != (TRUE, 10, 'abc', [1,2,3], {a:2}, x->2*x)) %>
- Greater than              <% check(10>9 & 'bbb'>'aaa' & [1,2,4]>[1,2,3]) %>
- Greater than or equal to  <% check(10>=9 & 'aaa'>='aaa') %>
- Less than                 <% check(9<10 & 'aaa'<'bbb' & [1,2,3]<[1,3,4]) %>
- Less than or equal to     <% check(9<=10 & 'aaa'<='aaa') %>

### Arithmetic operations
- Sum               <% check((TRUE, 10, 'abc', [1,2,3], {a:1}) + (FALSE, 1, 'd', [4], {b:2}) == (TRUE, 11, 'abcd', [1,2,3,4], {a:1,b:2})) %>
- Subtraction       <% check((10, 20) - (1, 0) == (9, 20)) %>
- Product           <% check((10, 20) * (2, 3) == (20, 60)) %>
- Division          <% check((10,20) / (2,5) == (5, 4)) %>
- Modulo            <% check((11,23) % (2,5) == (1, 3)) %>
- Exponentiation    <% check((10,2) ** (2,4) == (100, 16)) %>

### Selection operations
- Condition     <% check((TRUE ? 10) == 10 & (FALSE ? 10) == ()) %>
- Alternative   <% check((10 ; 20) == 10 & (() ; 20) == 20) %>
- If-then-else  <% check((FALSE ? 10 ; 20) == 20) %>

### Subcontexting opertion
- Dot operation <% check((x=10, y=20, {y:30}.(x+y)) == 40) %>

### Function composition
- Compose   <% check({f:x->2*x, g:x->[x], h:g<<f}.(h 3) == [6]) %>
- Pipe      <% check({f:x->2*x, g:x->[x], h:f>>g}.(h 3) == [6]) %>

### Mapping operation
- Map   <% check(((1,2,3) => x -> 2*x) == (2,4,6)) %>

### Referencing operation
- String    <% check(("abc","def") (1) == ('b','e')) %>
- List      <% check(([1,2,3],[4,5,6]) (1) == (2,5)) %>
- Namespace <% check(({a:1,b:2},{a:10,b:20}) "a" == (1,10)) %>

### Built-in function
- bool  <% check(bool(TRUE, 10, "abc", [], {a:1})) %>
- not   <% check(not(FALSE, 0, "", [], {})) %>
- dom   <% check(dom("abc") == (0,1,2)) %>
- size  <% check(size("abc") == 3) %>
- str   <% check(str(TRUE,10,"abc",[1,2,3]) == "TRUE10abc[[List of 3 items]]") %>
- type  <% check(type(TRUE,10,"abc",[1,2,3],{a:1},x->x) == ('Bool','Numb','Text','List','Namespace','Func')) %>




