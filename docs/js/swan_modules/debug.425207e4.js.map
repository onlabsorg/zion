{"version":3,"sources":["webpack:///../olowiki/node_modules/@onlabsorg/swan-js/lib/modules/debug.js","webpack:///./node_modules/@onlabsorg/swan-js/lib/modules/debug.js"],"names":["module","exports","types","debug","logCount","log","values","term","Tuple","normalize","console"],"mappings":"uGAQAA,EAAOC,QAAUC,IACb,MAAMC,EAAQ,GAQd,IAAIC,EAAW,EAUf,OATAD,EAAME,IAAM,IAAIC,KACZ,MAAMC,EAAO,IAAIL,EAAMM,SAASF,GAAQG,YAIxC,OAFAL,IACAM,QAAQL,IAAI,OAAOD,KAAaG,GACzB,SAASH,OAIbD,I,qBCnBXH,EAAOC,QAAUC,IACb,MAAMC,EAAQ,GAQd,IAAIC,EAAW,EAUf,OATAD,EAAME,IAAM,IAAIC,KACZ,MAAMC,EAAO,IAAIL,EAAMM,SAASF,GAAQG,YAIxC,OAFAL,IACAM,QAAQL,IAAI,OAAOD,KAAaG,GACzB,SAASH,OAIbD","file":"js/swan_modules/debug.425207e4.js","sourcesContent":["/**\n *  debug module\n *  ============================================================================\n *  The debug module provides functions for debugging swan code.\n */\n\n\n\nmodule.exports = types => {\n    const debug = {};\n    \n    \n    /**\n     *  debug.log: Term t -> Text id\n     *  ------------------------------------------------------------------------\n     *  The log function writes the passed item to the javascript console.\n     */\n    let logCount = 0;\n    debug.log = (...values) => {\n        const term = new types.Tuple(...values).normalize();\n        \n        logCount++;\n        console.log(`Log ${logCount}:`, term);\n        return `[[Log ${logCount}]]`;\n    }\n    \n    \n    return debug;\n}\n\n","/**\n *  debug module\n *  ============================================================================\n *  The debug module provides functions for debugging swan code.\n */\n\n\n\nmodule.exports = types => {\n    const debug = {};\n    \n    \n    /**\n     *  debug.log: Term t -> Text id\n     *  ------------------------------------------------------------------------\n     *  The log function writes the passed item to the javascript console.\n     */\n    let logCount = 0;\n    debug.log = (...values) => {\n        const term = new types.Tuple(...values).normalize();\n        \n        logCount++;\n        console.log(`Log ${logCount}:`, term);\n        return `[[Log ${logCount}]]`;\n    }\n    \n    \n    return debug;\n}\n\n"],"sourceRoot":""}